# Generated by Django 5.2.4 on 2025-07-11 21:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APIConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='EiA MELIA API', max_length=100, unique=True)),
                ('token', models.CharField(help_text='API Token for EiA MELIA API', max_length=255)),
                ('base_url', models.URLField(default='https://my.eia.cgiar.org/api/v1/melia')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DashboardMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(max_length=50)),
                ('metric_name', models.CharField(max_length=100)),
                ('metric_value', models.JSONField()),
                ('period_start', models.DateField(blank=True, null=True)),
                ('period_end', models.DateField(blank=True, null=True)),
                ('computed_at', models.DateTimeField(auto_now_add=True)),
                ('is_current', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-computed_at'],
                'unique_together': {('metric_type', 'metric_name', 'period_start', 'period_end')},
            },
        ),
        migrations.CreateModel(
            name='DataSyncLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sync_type', models.CharField(default='participants', max_length=50)),
                ('status', models.CharField(choices=[('started', 'Started'), ('success', 'Success'), ('failed', 'Failed'), ('partial', 'Partial Success')], max_length=20)),
                ('records_processed', models.IntegerField(default=0)),
                ('records_created', models.IntegerField(default=0)),
                ('records_updated', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('error_details', models.JSONField(default=dict)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.FloatField(blank=True, null=True)),
                ('initiated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ParticipantRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(help_text='ID from external API', max_length=100, unique=True)),
                ('usecase', models.CharField(default='akilimo', max_length=50)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('age_group', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('lga', models.CharField(blank=True, help_text='Local Government Area', max_length=100, null=True)),
                ('event_type', models.CharField(blank=True, max_length=100, null=True)),
                ('training_date', models.DateField(blank=True, null=True)),
                ('facilitator', models.CharField(blank=True, max_length=200, null=True)),
                ('farm_size', models.FloatField(blank=True, help_text='Farm size in hectares', null=True)),
                ('previous_yield', models.FloatField(blank=True, help_text='Previous yield in tons/hectare', null=True)),
                ('expected_yield', models.FloatField(blank=True, help_text='Expected yield after recommendations', null=True)),
                ('raw_data', models.JSONField(default=dict, help_text='Raw data from API')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['usecase', 'state'], name='dashboard_p_usecase_7daed7_idx'), models.Index(fields=['training_date'], name='dashboard_p_trainin_a6d125_idx'), models.Index(fields=['gender'], name='dashboard_p_gender_380a6a_idx')],
            },
        ),
    ]
